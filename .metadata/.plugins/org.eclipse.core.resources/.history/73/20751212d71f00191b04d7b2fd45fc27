package com.tavant.scrum_board.controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseStatus;
import org.springframework.web.bind.annotation.RestController;

import com.tavant.scrum_board.models.Project;
import com.tavant.scrum_board.models.Team;
import com.tavant.scrum_board.repositories.ProjectRepositories;
import com.tavant.scrum_board.repositories.TeamRepositories;

@RestController
@RequestMapping("/project_api")
public class ProjectRestController {

	@Autowired
	private ProjectRepositories repositories;
	@Autowired
	private TeamRepositories teamRepositories;

	@GetMapping("/project")
	public List<Project> teamList() {
		return repositories.findAll();
	}

	@PostMapping("/save")
	@ResponseStatus(HttpStatus.OK)
	public void createteam(@RequestBody Project project) {

		// create team object by TeamRepositories
		Team team = teamRepositories.findByTeamId(1);

		System.out.println(team);
		project.setTeam(team);
		repositories.save(project);
	}

	@GetMapping("/project/{projectId}")
	public Project getProject(@PathVariable("projectId") int projectId) {

		return repositories.findByProjectId(projectId);

	}

	@PostMapping("/delete/{projectId}")
	public String deleteTeam(@PathVariable int projectId) {
		repositories.deleteById(projectId);

		return "project  id " + projectId + "is deleted.";
	}

}
